---
- name: Copy environment variables file
  template:
    src: env.j2
    dest: "{{ express_app_path }}/.env"
    mode: 0644
    owner: "{{ express_system_user }}"
    group: "{{ express_system_group }}"
  tags:
    - molecule-idempotence-notest
  changed_when: false # noqa 301

- name: Install Javascript requirements
  become: true
  become_user: "{{ express_system_user }}"
  yarn:
    state: present
    path: "{{ item }}"
  with_items: "{{ express_package_json_paths }}"
  tags:
    - molecule-idempotence-notest

- name: Compile Javascript
  command:
    cmd: yarn build
    chdir: "{{ express_app_path }}"
  become: true
  become_user: "{{ express_system_user }}"
  tags:
    - molecule-idempotence-notest # noqa 301

# creates a sym-link express_codebase_path; that points to the express checkout path
- name: Make the new codebase current
  file:
    src: "{{ express_checkout_path }}"
    dest: "{{ express_codebase_path }}"
    state: link
    force: true
    owner: "{{ express_system_user }}"
    group: "{{ express_system_group }}"
  tags:
    - molecule-idempotence-notest

- name: delete specific express pm2 process
  become: true
  become_user: "{{ express_system_user }}"
  command: "{{ express_pm2_path }} delete {{ pm2_express_service_name }}"
  # this command fails if the process has not yet been started
  ignore_errors: yes

- name: start express pm2 app
  become: true
  become_user: "{{ express_system_user }}"
  command: "{{ express_pm2_path }} start dist/index.js --name {{ pm2_express_service_name }}"
  args:
    chdir: "{{ express_app_path }}"

- name: save the current PM2 running list
  become: true
  become_user: "{{ express_system_user }}"
  command: "{{ express_pm2_path }} save"

- name: delete the old startup file
  become: true
  become_user: "root"
  command: "{{ express_pm2_path }} unstartup {{ express_init_system }} -u {{ express_system_user }}"
  environment:

- block:
  - name: Cleanup pm2 processes
    become: true
    become_user: "root"
    shell: "pkill -u {{ express_system_user }}"
  when: express_init_system == "systemd"

- name: generate an express PM2 init service file
  become: true
  become_user: "root"
  command: "{{ express_pm2_path }} startup {{ express_init_system }} -u {{ express_system_user }} --hp {{ express_system_user_home }}"

- name: Change pm2 service configs
  block:
    - name: Replace pm2 resurrect with pm2 start
      lineinfile:
        regexp: "^ExecStart"
        line: "ExecStart=/usr/lib/node_modules/pm2/bin/pm2 start dist/index.js -n {{ pm2_express_service_name }}"
        dest: "/etc/systemd/system/pm2-{{ express_system_user }}.service"

    - name: Add WorkingDirectory in pm2-express.service file
      lineinfile:
        path: /etc/systemd/system/pm2-{{ express_system_user }}.service
        insertbefore: "^ExecStart"
        line: "WorkingDirectory={{ express_app_path }}"
  when: express_init_system == "systemd"

- name: reload systemd daemons
  become: true
  become_user: "root"
  systemd:
    daemon_reload: yes
  when: express_init_system == "systemd"

- name: Start pm2 express service, if not started
  ansible.builtin.service:
    name: pm2-{{ express_system_user }}
    state: started
